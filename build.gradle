import com.vanniktech.maven.publish.JavaLibrary
import com.vanniktech.maven.publish.JavadocJar

buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }

    dependencies {
        classpath "com.kotcrab.vis:vis-usl:0.2.1"
        classpath "com.badlogicgames.gdx:gdx-tools:1.9.2"
    }
}

plugins {
    id("com.github.ben-manes.versions") version "0.52.0"
    id("com.vanniktech.maven.publish.base") version "0.33.0"
}

subprojects {
    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "signing"
    apply plugin: 'com.vanniktech.maven.publish.base'

    group = 'com.kotcrab.vis'
    version = projectVersion

    ext {
        appName = 'vis'
        gdxVersion = '1.13.1'
        jnaVersion = '4.1.0'
        jnaPlatformVersion = '3.5.2'
        junitVersion = '4.13.2'
        imgscalrVersion = '4.2'

        isReleaseVersion = !version.endsWith("SNAPSHOT")
    }

    repositories {
        mavenCentral()
    }

    mavenPublishing {
        publishToMavenCentral(true)
        if (isReleaseVersion) {
            signAllPublications()
        }

        coordinates("com.kotcrab.vis", projectName, projectVersion)
        configure(new JavaLibrary(new JavadocJar.Javadoc(), true))

        pom {
            name = projectName
            description = projectDesc
            url = 'https://github.com/kotcrab/vis-ui/'

            scm {
                connection = 'scm:git:git@github.com:kotcrab/vis-ui.git'
                developerConnection = 'scm:git:git@github.com:kotcrab/vis-ui.git'
                url = 'git@github.com:kotcrab/vis-ui.git'
            }

            licenses {
                license {
                    name = 'The Apache License, Version 2.0'
                    url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }

            developers {
                developer {
                    id = 'kotcrab'
                    name = 'Kotcrab'
                    url = 'https://kotcrab.com'
                }
            }
        }
    }

    task publishSnapshot {
        if (!isReleaseVersion) {
            finalizedBy(tasks["publishToMavenCentral"])
        }
    }

    javadoc {
        options.encoding = 'UTF-8'
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}
